@namespace Microsoft.AspNetCore.Components
@implements IDisposable

<CascadingValue T="Task<IAuthenticationState>" Value="@_currentAuthStateTask" ChildContent="@ChildContent" />

@functions {
    private Task<IAuthenticationState> _currentAuthStateTask;

    [Inject] private IAuthenticationStateProvider AuthStateProvider { get; set; }

    /// <summary>
    /// The content to which the authentication state should be provided.
    /// </summary>
    [Parameter] public RenderFragment ChildContent { get; private set; }

    protected override void OnInit()
    {
        AuthStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;

        _currentAuthStateTask = AuthStateProvider
            .GetAuthenticationStateAsync(forceRefresh: false);
    }

    private void OnAuthenticationStateChanged(Task<IAuthenticationState> newAuthStateTask)
    {
        Invoke(() =>
        {
            _currentAuthStateTask = newAuthStateTask;
            StateHasChanged();
        });
    }

    void IDisposable.Dispose()
    {
        AuthStateProvider.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}
